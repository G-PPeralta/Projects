{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Ignite/React/Projects/dtmoney/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Header } from \"./components/Header\";\nimport { GlobalStyle } from \"./styles/global\";\nimport Modal from 'react-modal';\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\nimport { TransactionsProvider } from \"./hooks/useTransactions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nexport function App() {\n  _s();\n\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  const handleOpenNewTransactionModal = () => {\n    setIsNewTransactionModalOpen(true);\n  };\n\n  const handleCloseNewTransactionModal = () => {\n    setIsNewTransactionModalOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransactionsProvider, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onOpenNewTransactionModal: handleOpenNewTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTransactionModal, {\n      isOpen: isNewTransactionModalOpen,\n      onRequestClose: handleCloseNewTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mt0wS0DAo1c1kbXTytbfQbU6xEg=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gabriel/Ignite/React/Projects/dtmoney/src/App.js"],"names":["React","useState","Dashboard","Header","GlobalStyle","Modal","NewTransactionModal","TransactionsProvider","setAppElement","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","handleOpenNewTransactionModal","handleCloseNewTransactionModal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;AAEAF,KAAK,CAACG,aAAN,CAAoB,OAApB;AAEA,OAAO,SAASC,GAAT,GAAe;AAAA;;AAEpB,QAAM,CAAEC,yBAAF,EAA6BC,4BAA7B,IAA8DV,QAAQ,CAAC,KAAD,CAA5E;;AAEA,QAAMW,6BAA6B,GAAG,MAAM;AAC1CD,IAAAA,4BAA4B,CAAC,IAAD,CAA5B;AACD,GAFD;;AAIA,QAAME,8BAA8B,GAAG,MAAM;AAC3CF,IAAAA,4BAA4B,CAAC,KAAD,CAA5B;AACD,GAFD;;AAIA,sBACE,QAAC,oBAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,yBAAyB,EAAGC;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE,QAAC,mBAAD;AAAqB,MAAA,MAAM,EAAGF,yBAA9B;AAA0D,MAAA,cAAc,EAAGG;AAA3E;AAAA;AAAA;AAAA;AAAA,YALF,eAOE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAvBeJ,G;;KAAAA,G","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Header } from \"./components/Header\";\nimport { GlobalStyle } from \"./styles/global\";\nimport Modal from 'react-modal';\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\nimport { TransactionsProvider } from \"./hooks/useTransactions\";\n\nModal.setAppElement(\"#root\");\n\nexport function App() {\n\n  const [ isNewTransactionModalOpen, setIsNewTransactionModalOpen ] = useState(false);\n\n  const handleOpenNewTransactionModal = () => {\n    setIsNewTransactionModalOpen(true);\n  }\n\n  const handleCloseNewTransactionModal = () => {\n    setIsNewTransactionModalOpen(false);\n  }\n\n  return (\n    <TransactionsProvider>\n      <Header onOpenNewTransactionModal={ handleOpenNewTransactionModal } />\n\n      <Dashboard />\n\n      <NewTransactionModal isOpen={ isNewTransactionModalOpen } onRequestClose={ handleCloseNewTransactionModal } />\n\n      <GlobalStyle />\n    </TransactionsProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}