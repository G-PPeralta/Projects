{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Ignite/React Js/dtmoney/first-aplication/src/TransactionsContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { api } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext([]);\nexport const TransactionsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get(\"transactions\").then(response => setTransactions(response.data.transactions));\n  }, []);\n\n  const createTransaction = async transactionInput => {\n    const response = await api.post('/transactions', {});\n    const {\n      transaction\n    } = response.data;\n    setTransactions([...transactions, transaction]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      transactions,\n      createTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionsProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["/home/gabriel/Ignite/React Js/dtmoney/first-aplication/src/TransactionsContext.js"],"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionsProvider","children","transactions","setTransactions","get","then","response","data","createTransaction","transactionInput","post","transaction"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAEA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAAC,EAAD,CAAzC;AAEP,OAAO,MAAMK,oBAAoB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACpD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CACAM,GADH,CACO,cADP,EAEGC,IAFH,CAESC,QAAD,IAAcH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CAFrC;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMM,iBAAiB,GAAG,MAAOC,gBAAP,IAA4B;AACrD,UAAMH,QAAQ,GAAG,MAAMR,GAAG,CAACY,IAAJ,CAAS,eAAT,EAA0B,EAA1B,CAAvB;AAGA,UAAM;AAAEC,MAAAA;AAAF,QAAkBL,QAAQ,CAACC,IAAjC;AAEAJ,IAAAA,eAAe,CAAC,CACd,GAAGD,YADW,EAEdS,WAFc,CAAD,CAAf;AAIA,GAVD;;AAYA,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAG;AAAET,MAAAA,YAAF;AAAgBM,MAAAA;AAAhB,KAAtC;AAAA,cACIP;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1BM;;GAAMD,oB;;KAAAA,oB","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { api } from \"./services/api\";\n\nexport const TransactionsContext = createContext([]);\n\nexport const TransactionsProvider = ({ children }) => {\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    api\n      .get(\"transactions\")\n      .then((response) => setTransactions(response.data.transactions));\n  }, []);\n\n  const createTransaction = async (transactionInput) => {\n   const response = await api.post('/transactions', {\n     \n   })\n   const { transaction } = response.data;\n\n   setTransactions([\n     ...transactions,\n     transaction,\n   ])\n  }\n\n  return (\n    <TransactionsContext.Provider value={ { transactions, createTransaction } }>\n      { children }\n    </TransactionsContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}